<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>240112 Report Draft of Upstream</title>
      <link href="/2024/01/12/240112%20Report%20Draft%20of%20Upstream/"/>
      <url>/2024/01/12/240112%20Report%20Draft%20of%20Upstream/</url>
      
        <content type="html"><![CDATA[<p>240112汇报口水稿，仅留档用，无演示，不建议阅读。</p><h2 id="相关内容"><a href="#相关内容" class="headerlink" title="相关内容"></a>相关内容</h2><p>PDF@6010_disk1_gmq: Report&#x2F;240112_Upstream.pdf<br>BOOK@6008_disk1: bioinfoResource&#x2F;book&#x2F;biostar&#x2F;rnaseq-by-example.pdf<br>LINK:</p><ol><li><a href="https://pubmed.ncbi.nlm.nih.gov/31341269/">RNA sequencing: the teenage years</a></li><li><a href="https://rnabio.org/course/">RNABioTutorial</a></li><li><a href="https://www.coursera.org/lecture/bioinformatics-pku/rna-seq-mapping-assembling-kSa63">Coursera</a></li><li><a href="https://www.sc-best-practices.org/introduction/prior_art.html">Single-cell best practices</a></li></ol><hr><p>这次讲解分为五个部分：先从上次内容引入，随后介绍一点背景知识，Set up讲一下安装准备，Preparation部分是模拟数据的分析为之后的真实分析做准备。最后是对本次内容进行总结。</p><hr><h2 id="引入"><a href="#引入" class="headerlink" title="引入"></a>引入</h2><p><strong>Introduction</strong></p><p>首先，回顾一下我们上次讲的内容：</p><ul><li>在上次提到的workflow中介绍的上游分析的部分，包括关于如何从FASTQ文件开始，量化到参考转录本，并准备基因水平的数据来用于下游分析，这些上游分析的部分在上次都没有进行学习和介绍。这次则主要介绍这部分内容。</li><li>那么对应到这个总流程图里面，这是师兄发的一个review里面给的图，非常好看。ABC三种实线代表了三种主流的workflow，虚线的部分是一些常用的其他工具。</li><li>在上次介绍的workflow中提到的是使用salmon完成这一部分的，可以看出，我们上次介绍的workflow是B。</li><li>不过，上次完成的只是从txi数据开始，通过tximeta得到一个SummarizedExperiment，从而得到DESeqDataSet，进而完成后面的探索性分析和差异基因分析，相当于完成了A，B两种路线共同后半部分。</li><li>但我们这次并不会继续完成B路线，而是改成了A路线。因为师兄不建议我最开始跟着这个workflow做，而是建议从好读一点的biostar开始。</li></ul><hr><p><strong>Where to start?</strong></p><ul><li>直接跳转到biostar（21版）的RNA-seq部分，它告诉我这一部分单独写了一本书，这哪里难得到我，直接打开18版，果然这版写在书里。</li><li>它以独立的小问题完成了介绍、名词解释、统计等简介，因而，我先选择这部分提到的几个比较重要的小问题来介绍一点背景知识。</li></ul><hr><h2 id="背景知识"><a href="#背景知识" class="headerlink" title="背景知识"></a>背景知识</h2><ul><li>什么是isoform？</li><li>指从同一基因座产生的 mRNA，但是转录起始位点（TSS）、编码蛋白质的 DNA 序列（CDS）和非翻译区（UTR）不同，可能会改变基因功能。图中就是一个基因的三种isoform。</li></ul><hr><ul><li>存在哪些类型的剪接事件？</li><li>提到有5种基本模式。跳过外显子，互斥外显子，替代5’或3’位点，内含子保留等，图示了一下什么是跳过外显子，替代5’或3’位点。</li></ul><hr><ul><li>什么是剪切感知对齐器？</li><li>来自两个外显子连接位置（即所谓的剪接位点）的读数会与基因组对齐，但它们之间会有很大的空隙（内含子）。这就是所谓的剪接比对。</li><li>因此，要将 RNA-Seq 数据与基因组对齐，我们需要使用 “剪接感知 “对齐器。这些对齐器能够在不影响对齐的情况下，对齐中间有很大空隙的读数。但是只有相邻外显子被连接的信息，我们能看的的只是连接点，只能得到部分信息。所以才一些工具通过建立数学模型或概率模型来估计哪些转录本存在</li><li>这里插播一个Coursera链接，也是我偶然发现的，在RNA这一章有3个讲解小视频，它在第里面个讲了我们流程的前两步：比对和组装。在讲比对的时候他就提到了如何做reads mapping，提到了2种方法来解决junction reads的问题：<ul><li>第1种方法是Join Exon<ul><li>先根据已知的转录本把所有排列组合方式算出来，然后把那些不能匹配的junction reads和它比对</li><li>可以发现new isoform，但只能对于已知的extron来排列组合</li></ul></li><li>第2种方法他说是类似于 BLAST 方法，（当然我这里没有查BLAST是什么）<ul><li>把那些不能匹配的junction reads切成长度为 k 的多个种子重新mapping，相近的seed就合并在一起</li><li>速度慢，但是可以解决未知的extron</li></ul></li><li>TopHat2就结合了以上两种方式，以平衡速度和敏感度<blockquote><p>BLAST方法</p></blockquote></li></ul></li><li>测序数据分析的第二步：assemble these reads into transcripts, and estimate their expression levels.<ul><li>我们可以将转录本组装问题解释为<strong>有向图上的遍历问题</strong>。我们可以利用图论中的<strong>路径查找算法</strong>，在给不同的边缘分配不同权重的约束条件下，找到一条或多条最优路径及其相应的转录序列。</li><li>Cufflinks是一个常用的工具，可以实现转录本组装。</li><li>于是他就在第3个视频里面介绍cufflinks了，这个我还没看。等下次再补充。<blockquote><p>Cufflinks</p></blockquote></li></ul></li></ul><hr><ul><li>下一个问题是RNA测序的步骤是怎样的？</li><li>通常而言是这样三步：对齐、计数、差异表达。这里还提到对于执行每个步骤的“正确”方法是什么存在很多分歧，从而导致了许多替代方法，每种方法都有自己的优点和权衡。</li><li>这里还提到说根据实现细节，其中一些阶段可能会组合操作。</li><li>例如，kallisto 将在单个步骤中执行分配和丰度估计，cuffdiff 将作为单个操作执行读取计数和差异表达计算。</li><li>当然，我认为这个图在解释RNA测序的步骤上面更加清晰：就是这样5个阶段。</li></ul><hr><ul><li>什么是添加标准物质控制？</li><li>其目的是是评估实验中测量和再现数据的准确性，尤其是在涉及已知（预期）属性的情况下。</li><li>方法是通过在样本中添加已知浓度和数量的标准物质（spike-in），研究人员可以评估实验的准确性、灵敏度和可重复性。这有助于确定实验条件下的技术偏差、变异性和测量误差。</li><li>最终终于读到这个实例环节，我赶忙点进这个教程，进入下一步的环节</li></ul><hr><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><ul><li>当然，其实故事的发展并不是这样，我一开始就跳到这里打开了这个tutorial，然后发现我在IGV的安装上就尬住了，因为我对linux服务器一无所知，当然我可以在我的windows系统上面苟，但这是没有意义的，而这种分析工作我早晚得用服务器做。</li></ul><hr><ul><li>所以我选择跳过了这一节先看看后面有没有什么能做的，他果真提了还有3点需要做准备：一是linux命令行，二是R语言，三是给了一些阅读材料，我们多次提到的这张图就是来自这个综述，也是师兄推荐我读的。但这个太难读了，我读不了一点儿，又想起来师兄说biostar好读一点，从而产生了前面background部分的内容。那么这一节能做的内容我便是做完了。</li></ul><hr><ul><li>我其实发现了21版本的RNA小册子，打开发现软件是跳不过去的，tutorial是卡住了的，所以又出门瞎折腾了一些经受了一些失败，才想起来回到biostar里看它是怎么做的，然后发现其实超级简单，一步到位。</li></ul><hr><ul><li><p>当然没有一步到位，要格外注意网络问题和工作文件目录问题，所以做这4步就好:<br>第一步，将pip源改为国内源</p></li><li><p>修改 <code>~/.pip/pip.conf</code>(没有就创建一个文件夹及文件。文件夹要加“.”，表示是隐藏文件夹)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">mkdir</span> ~/.pip/         <span class="comment"># Make directory</span></span><br><span class="line">$ <span class="built_in">cd</span> ~/.pip/            <span class="comment"># Change directory</span></span><br><span class="line">$ <span class="built_in">touch</span> pip.conf        <span class="comment"># Create pip.conf file</span></span><br><span class="line">$ nano ~/.pip/pip.conf  <span class="comment"># Edit pip.conf file</span></span><br></pre></td></tr></table></figure></li><li><p>添加以下内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[global]</span><br><span class="line">index-url = https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class="line">[install]</span><br><span class="line">trusted-host=mirrors.aliyun.com</span><br></pre></td></tr></table></figure><p>第二步，确保你在<code>/home/username/</code>，也就是<code>~/</code>路径下<br>第三步，运行biostar给出的自动化软件安装脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Copy the following command to your terminal:</span></span><br><span class="line">curl http://data.biostarhandbook.com/install.sh | bash</span><br><span class="line"><span class="comment"># Apply the changes in the current terminal by running:</span></span><br><span class="line"><span class="built_in">source</span> ~/.bash_profile</span><br></pre></td></tr></table></figure><p>最后，激活bioinfo环境，检查软件是否安装完毕</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">gmq@zhanglab ~</span><br><span class="line">$ conda activate bioinfo</span><br><span class="line">(bioinfo)</span><br><span class="line"></span><br><span class="line">gmq@zhanglab ~</span><br><span class="line">$ doctor.py</span><br></pre></td></tr></table></figure></li><li><p>这个小程序很恶趣味，他会向你报告：做好了，陛下</p></li></ul><hr><p>它在后面还提到了如何选择文本编辑器的问题，我原本是没有理会，反正我们有记事本，但是它又说win和linux在这个行尾有点猫腻，我还特意在linux装了一下sublime，发现卡的要死，尝试了几种解决方法都不能解决之后我就速速remove了，回到我们朴素的nano，但是sublime装的过程无比丝滑，我不禁想到IGV可能也是这么搞定的，这个暂时还没有尝试，留到下次</p><blockquote><p>Linux编辑器、IGV软件安装</p></blockquote><hr><h2 id="分析准备"><a href="#分析准备" class="headerlink" title="分析准备"></a>分析准备</h2><ul><li>接下来终于可以切入主题了。</li><li>在biostar这本书里，主要是用一个叫做Golden Snidget的数据来进行分析</li><li>题外话：Golden Snidget是哈利波特的魁地奇球赛的那个鸟</li><li>在生物学中，”金标准 “数据是指具有已知特性的数据。通过在分析过程中重现已知属性，我们可以验证我们所使用的方法，并证明我们正确应用技术的能力。</li><li>所以，可以从 “黄金标准 “数据的角度来演示几种 RNA-Seq 数据分析方法。我们将分析的数据是作为所谓的 “spike-in control”创建的，即在从细胞中提取的 mRNA 中加入已知丰度的 mRNA；然后将人工添加的标准数据数据和真实数据进行比较。然后在 Illumina 测序仪上对人工加标和真实数据进行测序。</li><li>就像这个鸟它要么是直直地飞，用BORED表示，要么就不断改变方向，用EXCITED表示。</li><li>在我们的数据中，转录本表达也受到类似如此完美的控制，甚至连基因都可以用一种描述其在两种状态下变化的方式来命名。例如，一个基因命名为 ABC-1000-UP-4，是因为在 BORED 状态下，每个细胞每时每刻都有 1000 份与基因 ABC 相对应的转录本。此外，该名称还表明，在 “兴奋”（EXCITED）状态下，同样的基因也是每个细胞每时每刻都有 4000 份与基因 ABC 相对应的转录本。二者间相差的倍数是4.</li><li>因此，得益于这种独特的基因命名规则，我们可以检查任何中间结果并评估分析的进展情况。所以，我们的目标就是证明，从 RNA-Seq 数据开始，可以在多大程度上，以及在什么情况下，重现已知的基因调控行为。</li></ul><hr><ul><li>首先，要理解的概念是参考，</li><li>我们有两种分析方法：1. 根据基因组进行量化 2. 对照转录组进行分类。我们两个都做。但在做之前要先理解我们都有什么：一个基因组、一个转录组，还有一个feature，就是我们的注释文件。</li><li>我们可以通过这个命令来查看参考的基因组和转录组中有多少测序量。我们从第一行可以看到基因组有一个单独的染色体，大小是128756个碱基对。有92个转录本，转录本的总长度是82756个碱基对，最短的转录本是273个碱基对，最长的转录本是2022个碱基对，平均是899个。</li><li>基因组和转录组的文件都是FASTA文件，通常是现有一个&gt;符号在首行，代表记录开始，紧随其后的就是测序ID这个ID可以是任意长的，所以常常也可以包含一些信息，后面的一行包含序列。还有一种文件是FASTQ文件，它则是有质量评测的信息，它以@开始首行，然后是测序数列，接下来是一个+，最后一行是和第二行相匹配的质量信息。这行鬼画符叫做Phred分数，其实是将表示错误可能性的两个数字映射为单个字符中，这样质量字符串的长度就会与序列的长度保持相同。</li><li>当然，我对这两种数据格式的介绍也就到此为止了，有关介绍在书里的其他章节，我还没有看完</li><li>注释信息则是长这个样子的，它把这一条染色体的外显子的位置和基因对应上。<blockquote><p>数据格式介绍</p></blockquote></li></ul><hr><ul><li>这个部分是在把基因组和转录组比对，是一个选做步骤。做这一步的目的是要验证一下我们的转录本是否是按照我们的假设是与基因组匹配的。</li><li>前两行做的是构建基因组的索引，<code>$IDX</code> 是指向基因组文件的路径。<code>hisat2-build</code> 是 Hisat2 工具的一个命令，用于构建基因组的索引。<code>$IDX $IDX</code> 指定了输入基因组文件和输出索引文件的路径。</li><li>之后进行转录组的比对，<ul><li><code>-x $IDX</code> 指定了要使用的基因组索引。</li><li><code>-f</code> 表示输入文件为FASTA格式。</li><li><code>-U refs/transcripts.fa</code> 指定了要比对的转录本文件。</li><li><code>|</code> 管道符将 Hisat2 的输出传递给下一个命令。</li><li><code>samtools sort &gt; refs/transcripts.bam</code> 对比对结果进行排序，并将结果保存为 BAM 文件。</li></ul></li></ul><hr><ul><li>现在我们已经对参考数据了如指掌，接下来需要了解一下我们的测序数据了。</li><li>首先，像之前查看基因组和转录组的测序量那样查看我们的测序数据的测序量</li><li>从中我们可以总结得出什么样的信息呢？<ol><li>实验捕捉两种状态的数据： BORED和EXCITED。</li><li>每种状态测量三次重复： 1, 2, 3.</li><li>测序是成对的，以 R1 和 R2 表示。读取长度为 100bp。</li><li>测量结果在样本中分布不均。</li><li>EXCITED_1 样本采集的数据是 BORED_1 样本的两倍等等。</li></ol></li><li>之后，可以把测序数据的id写到一个ids的文件里存好方面后面用。可以手写，也可以用上面这行代码来写入。</li></ul><hr><ul><li>我们可以基于RNA测序数据来完成对齐的操作了 。</li><li>做法和之前的转录组与基因组对齐的方法类似，使用hisat完成。生成比对的BAM文件</li><li>再根据feature文件，使用featureCount就可以完成量化操作了。</li><li>那么上面这行是做什么的呢？其实是我一直故意没提到的部分，实际上，biastar在做上面的每一步的时候，都会把数据用IGV进行可视化，但是可视化的过程会比较卡，通过把BAM转换成bedGraph，最后得到bigWig，再使用IGV的时候就会更流畅快速了。那么IGV是怎么使用的，这部分也是在书的其他章节提到，还没有看，就放在下次在介绍了。</li></ul><hr><ul><li>最后，基于分类的 RNA-Seq 通过所谓的 “伪对齐 “工作。</li><li>每个read不使用基因组作为参考，而是被分类为，或者说（分配给）一个转录本。</li><li>由于有些read可以分配给多个转录本，因此还要运行内部重新分配算法，尝试在转录本的相似区域内重新分配读数，以验证其他观察到的限制条件。<blockquote><p>Classification</p></blockquote></li></ul><hr><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>所以我们相当于勉强在模拟数据上走了一下A路径，B和C有简单提到。<br>最后总结一下遗留没解决的问题：</p><ul><li>常识问题包括：BLAST是什么，各种数据格式的具体内容</li><li>技术问题包括：编辑器、IGV等软件安装</li><li>未完成主线内容包括：路线B、C是怎么实现的，师兄提到的节点都是怎么做的。这里简单提一下，因为我还没看相关资料或代码，只是大数据刚好微信推送了一个，恰好基本上师兄提到的这几个工具都有提到，我这里只提一下关于这几个节点的初步印象。</li><li>我们前面提及过的<code>conda</code>,<code>mamba</code>都是管理和配置软件环境的工具，<code>conda</code>是用<code>python</code>编写的，<code>mamba</code>是<code>conda</code> 的加速实现，使用<code>C++</code>编写，旨在更快地执行包管理操作。</li><li><code>prefetch</code>是<code>SRA Toolkit</code>（Sequence Read Archive Toolkit）工具集中的一个命令，用于从NCBI SRA数据库（Sequence Read Archive，序列读取存档）中预取（下载）数据。</li><li>FastQc：实现测序数据质量检测与控制。它会生成一个报告。</li><li>Trimmomatic：过滤低质量序列</li><li>此外，我找到的这个tutorial基本没推进。</li><li>本次内容中参考的链接是这几个，最后一个在本次内容中没提到，我暂时也没看，但也是我目测有很大学习价值的书，也列在这里。</li></ul><hr>]]></content>
      
      
      <categories>
          
          <category> RNA-seq Report Draft </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Not Recommended Reading </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>240102 Report Draft of DESeq2 WorkFlow</title>
      <link href="/2024/01/02/240102%20Report%20Draft%20of%20DESeq2%20WorkFlow/"/>
      <url>/2024/01/02/240102%20Report%20Draft%20of%20DESeq2%20WorkFlow/</url>
      
        <content type="html"><![CDATA[<p>240102汇报口水稿，仅留档用，无演示，不建议阅读。</p><h2 id="相关内容"><a href="#相关内容" class="headerlink" title="相关内容"></a>相关内容</h2><p>PDF@6010_disk1_gmq: Report&#x2F;240102_DESeq2_WorkFlow.pdf<br>Code@6010_disk1_gmq: Code&#x2F;240102_DESeq2_WorkFlow.R<br>Link: <a href="https://master.bioconductor.org/packages/release/workflows/vignettes/rnaseqGene/inst/doc/rnaseqGene.html">https://master.bioconductor.org/packages/release/workflows/vignettes/rnaseqGene/inst/doc/rnaseqGene.html</a></p><hr><h2 id="引入"><a href="#引入" class="headerlink" title="引入"></a>引入</h2><ul><li>今天是只关注这一个DESeq2的流程文档的介绍。</li><li>可能有一些细节的解释可能差点，因为我有一些没搞清楚就先跳。</li><li>这个文档是教我们如何从FASTQ文件出发来进行探索性数据分析和差异基因分析，并做出结果的可视化。所以它有一部分是在讲如何用Salmon处理得到量化到参考转录组的。我把这部分跳过去，直接从Salmon处理好的数据导入开始。</li><li>做探索性分析目的是观察我们的样本数据质量和样本之间的关系。</li><li>做差异分析则是为了找到在选定的实验条件下，不同组样本的基因表达具有显著性差异的基因。</li></ul><hr><p><strong>Contents, p1</strong></p><p>因此，我们的主要内容则包括这样几个步骤：</p><ul><li>首先简单介绍我们分析的数据，</li><li>如何导入数据，</li><li>然后是探索性分析，差异分析，可视化结果。</li><li>后面还会提及基因注释，移除隐藏的批次效应，时间过程实验。</li></ul><hr><p><strong>Experimental data, p2</strong></p><ul><li>我们的数据是从airway这个包里的数据，研究是的地塞米松对呼吸道平滑肌细胞的影响，有4个cell line，就是4个人作为细胞的供体。</li><li>因此我们就是会有8个样本，按照是否给地塞米松分为实验组和对照组，每一个组有4个不同供体的样本。</li></ul><hr><p><strong>Preparing quantification input to DESeq2, p2</strong></p><ul><li>我们输入的数据应当是一个没有做过normalize的counts矩阵，</li><li>前面经过salmon处理得到的是一个transcript-level quantification data，我们可以用tximport&#x2F;tximeta把他们aggregate到基因水平。</li><li>然后这里讲了一堆没太看懂的东西，我们先把这些跳过。</li><li>必须要知道的是，tximeta会得到一个SummarizedExperiment，这个是可以通过DESeqDataSet函数读到我们的DESeq2里面。</li></ul><hr><p><strong>Preparing libraries</strong></p><hr><h2 id="数据读取"><a href="#数据读取" class="headerlink" title="数据读取"></a>数据读取</h2><p><strong>Reading in data with tximeta, p4</strong></p><ul><li>首先找到要导入的counts数据，他们在quants文件夹下</li><li>我们还要导入一个对应包含有sample information的csv文件</li><li>把这两个数据都存到coldata里面，tximeta读取，summarizeToGene</li><li>就可以得到用Ensemble gene ID标识的基因表达数据了</li><li>如果原本的count矩阵存储形式不一样，也可以用其他的方式读取。</li></ul><hr><p><strong>SummarizedExperiment, p6</strong></p><ul><li><p>在这里简单介绍一下tximeta读取的SummarizedExperiment</p></li><li><p>包含3个部分：</p></li><li><p>assay：在我们这个例子里他包括了3个matrix：</p><ul><li>counts，是non-normalized counts，</li><li>abundance，是TPM数据。</li><li>length，代表基因的<strong>有效长度</strong>。（有关这个有效长度怎么理解我还说不好）<blockquote><p>TPM<br><em>Transcripts Per Kilobase of exon model per Million mapped reads</em></p></blockquote></li></ul></li><li><p>rowRanges：包含gene range信息，如基因的位置，正反读等。</p><ul><li>它还包括了一个metadata在seqinfo里面，是染色体的信息</li></ul></li><li><p>colData：包含sample的信息，如donor ID, treatment condition</p></li><li><p>因为我们需要的counts是assay的第一个matrix，直接用assay就行</p></li></ul><hr><p><strong>DESeqDataSet object, sample information, design formula, p9</strong></p><ul><li>DESeqDataSet build up on SummarizedExperiment, 有2个区别：<ol><li>DESeqDataSet的assay使用counts，其matrix value是非负整数</li><li>DESeqDataSet有一个design formula</li></ol></li><li>关于这个formula 的理解：还有点不是很透彻，目前我把他理解为：它是确定我们研究哪些因素来产生差异，比如group，treatment，我们可以把考虑到的因素都写进去，就写成~ group + treatment。后面还有提到的batch effect也可以写进去重新计算results。</li><li>它还可以有interaction terms，比如group: treatment，最后提到的的时间过程实验就是一种，它研究随时间的给药变化是否一致。</li></ul><hr><p><strong>Starting from SummarizedExperiment, p10</strong></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dds <span class="operator">&lt;-</span> DESeqDataSet<span class="punctuation">(</span>gse<span class="punctuation">,</span> design <span class="operator">=</span> <span class="operator">~</span> cell <span class="operator">+</span> dex<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>注意确认样本信息的row是和count的column是对应正确的。</p><p><strong>Starting from count matrices, p10</strong></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ddsMat <span class="operator">&lt;-</span> DESeqDataSetFromMatrix<span class="punctuation">(</span></span><br><span class="line">countData <span class="operator">=</span> countdata<span class="punctuation">,</span></span><br><span class="line">colData <span class="operator">=</span> coldata<span class="punctuation">,</span></span><br><span class="line">design <span class="operator">=</span> <span class="operator">~</span> cell <span class="operator">+</span> dex<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><hr><h2 id="探索性分析与可视化"><a href="#探索性分析与可视化" class="headerlink" title="探索性分析与可视化"></a>探索性分析与可视化</h2><p>transformation of the counts → visually explotr sample relationship</p><ol><li>pre-filtering</li><li>VST and rlog</li></ol><ul><li>对于多维数据的探索性分析的一个常见方式是PCA，但是PCA通常是在方差变化很小的数据中表现的好。我们的RNA-seq数据的counts是<strong>variance会随着mean的增大而增大</strong>。<blockquote><p>Disperation<br>这里提到了RNA-seq的数据特征，所以再重新讲一负二项分布模型，以及纠正我之前的一个关于t检验的理解错误<br>【插入链接】<a href="https://github.com/hbctraining/DGE_workshop_salmon/blob/master/lessons/01_DGE_setup_and_overview.md#:~:text=RNA%2Dseq%20count%20distribution">https://github.com/hbctraining/DGE_workshop_salmon/blob/master/lessons/01_DGE_setup_and_overview.md#:~:text=RNA%2Dseq%20count%20distribution</a><br>首先要介绍一下这个数据的特点：</p><ol><li>低counts数据占了很大部分</li><li>count的上限可以很高</li><li>数据的变化大。<br>（在这里它提到了微阵列数据的log是正态分布，但是，由于 RNA-seq 计数数据的不同特性，如整数计数而非连续测量值以及非正态分布数据，正态分布并不能准确地模拟 RNA-seq 计数。此处他讲的很清楚但我没太看懂，但我联想到了之前的问题：高通量测序不能用t检验。上次师兄也说我那个解释不太对，但我也没听懂师兄讲的和t检验有什么关系，所以我还是没懂，但这个不适合在这里展开，所以后面再说）</li></ol><p>回到这个数据这样的特点，我们讨论数据模型的选择，我们有二项分布、泊松分布、负二项分布等。</p><p>首先，p非常小，所以选择泊松分布或者负二项分布就比较合适。选择其中一种还是另一种将取决于我们数据的均值和方差之间的关系</p><p>第二，考虑到方差-均值关系，首先是方差是比均值要大的，其次是对应低表达的数据有很大的异方差性。因此我们选择了负二项分布。</p><p>最后，我们就不能选择泊松分布吗？不是的，如果我们的生物学重复足够多（比如＞20），那么方差就会减小逐渐逼近variance&#x3D;mean</p></blockquote></li><li>一个常见处理是log(counts+1)变换，但是这样会夸大低count的方差</li><li>我们这里介绍两种变换来解决这个问题：VST和rlog，如何选择：<ul><li>VST：速度快，异常值敏感性低，中到大数据集(n＞30)表现好</li><li>rlog：小数据集（n&lt;30）表现好，适合样本间测序深度变化大</li></ul></li><li>但是这个变换的时候声明了一个blind&#x3D;FALSE，我暂时<strong>没看懂</strong>这个参数的布尔值选择的原因。所以我选择跳过这里。</li><li>接下来就是对这三种方式的比较，log，VST，rlog。这里提到对于log的方式我们需要先对counts进行一个normalize来消除测序深度的影响。这就又回到了上次我没有解决的一个问题，DESeq2的normalize是怎样的，它的方法是比edgeR简单的，所以我很乐意在这里介绍一下，至于edgeR的比较复杂，我还没把它搬到今天的展示里面。不如下次再说。</li></ul><blockquote><p>Normalization<br>先求ln，然后对行求均值，把负无穷都移除，再把每一个ln值和行的ln均值做差，找到中位数。。。但是这个数学过程我有点记不清了，statquest就是讲了一下子</p></blockquote><ul><li>然后这里有个小问题会报错建议改一下就行，我还在这放了个总结</li></ul><hr><p><strong>Assess overall similarity between samples, p14</strong></p><ul><li>上面做的VST还有rlog都是为了处理也可以不只是给PCA用的，我们还有一个方式来估计样本间的相似性，就是直接计算欧氏距离</li><li>当然这个我具体就没有研究是怎么计算的了，我们直接用VST数据计算distance，然后可以画个热图来展示一下这个距离关系。</li><li>除此以外我们还可以计算泊松距离，原理也没看，注意他就不能用标准化之后的数据了，要用原始数据。也是可以画一个热图。</li><li>当然了，还有一个方法就是我们的常客PCA了，我们用VST数据就行了，嫌这个PCAplot丑的话我们还可以用ggplot，可以多打点标签。</li><li>GLM-PCA：输入count matrix，潜在维度&#x3D;2</li><li>MDS plot：多维标度图？只有距离的数据，没有matrix可以画这个</li></ul><hr><h2 id="差异分析"><a href="#差异分析" class="headerlink" title="差异分析"></a>差异分析</h2><ol><li>run the pipeline:<figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dds <span class="operator">&lt;-</span> DESeq<span class="punctuation">(</span>dds<span class="punctuation">)</span></span><br></pre></td></tr></table></figure></li><li>build the result table</li></ol><ul><li>默认会根据formula的最后一个变量来计算log2 fold change和p值</li><li>也可以通过加contrast参数来改变。这里是在解释这几个量是什么。</li><li>basemean：normalized count 的均值。</li><li>log2FoldChange：就是选定的formula变量之后计算的，lfcSE是标准误，我大概推测就是不同样本都算了一个lfc之后它就可以算这个样本的均值，然后和之前的lfc就能算标准误了。</li><li>这个stat就是统计量，Wald统计量这个问题，先看一眼这个是怎么算的：pdf，网址。</li><li>然后就是涉及到我的知识盲区了，我之前统计学的很粗糙而且都还给老师了，就是隐约记得z统计量他是在均值和方差都已知的时候算的，然后t是均值已知方差未知。然后都是正态分布。我们这里的正态分布应该是针对lfc来说的，不是count。那我对这个问题的认知就有点问题了，wald检验也是每次就检验这一个基因，所以也会存在需要FDR调整p值的问题。为什么不能用t检验呢。</li><li>这个wald test它就是在检验lfc是不是等于0，就这块反正还是挺迷茫的，首先lfc的分布就不是很理解，然后就要对他检验，所以实际上我们作图比如MA图里面的那个纵轴M和这个有什么样的联系呢？<blockquote><p>t-test<br>这个问题纠结了很久，大概找了一个看起来比较合适的解释的，但我没太理解，但再纠结下去我就在这个问题上耗太久了，就暂时放下了，在这我再念一下这个人的<a href="https://www.biostars.org/p/376538/#:~:text=You%20can%20use,discussion%20of%20this).">解释</a>]。<br><em>“你可以使用 T 检验，limma 也是这么做的（不过是在将计数通过 voom 之后，再使用一些经验贝叶斯方法）。没有人对 RNA-seq 进行简单的 T 检验的原因与没有人对阵列数据进行 T 检验的原因相同，即在不汇集跨基因信息的情况下，很少有足够的样本数量来准确估计方差（有关这方面的讨论，请参阅 limma 的原始论文）。”</em><br>所以我感觉他的意思就是方差不准所以不用t检验，但我还不是特别理解为什么</p></blockquote></li><li>然后就是可以用summary来总结result</li><li>以及这里出现了p值是NA的情况，原因可能是有这样三点：count全是0，有异常值，自动的independent filter给筛掉了。这个independent filter在后面会提，这里就不说了</li><li>当然，也可以选formula里面其他的来比较</li><li>这里的padj就不再说了，他是用了那个BH方法，虽然我上次也没讲明白这个是怎么调整的，大概好像是他是给所有的p值排序，然后把这个p值乘上一个系数，总数除以他的排位，然后和排在这位的那个p比一下，选小的那个就是padj。</li></ul><hr><h2 id="结果展示"><a href="#结果展示" class="headerlink" title="结果展示"></a>结果展示</h2><p><strong>Counts plot</strong></p><p>对选定的p值最小的基因按组进行count的展示</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">topGene <span class="operator">&lt;-</span> rownames<span class="punctuation">(</span>res<span class="punctuation">)</span><span class="punctuation">[</span>which.min<span class="punctuation">(</span>res<span class="operator">$</span>padj<span class="punctuation">)</span><span class="punctuation">]</span></span><br><span class="line"><span class="comment"># 找到调整后的p值（padj）最小的基因在结果表（res）中的索引，从而找到最小padj对应的基因名</span></span><br><span class="line">plotCounts<span class="punctuation">(</span>dds<span class="punctuation">,</span> gene <span class="operator">=</span> topGene<span class="punctuation">,</span> intgroup<span class="operator">=</span><span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;dex&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment"># 在图中按照 &quot;dex&quot; 列指定的条件进行分组</span></span><br></pre></td></tr></table></figure><ul><li>除了直接展示counts以外，还可以用ggbeeswarm进行展示，此外，如果只展示普通点图的话，可以加上cell “line”</li><li>这几个图都很简单~直接看文档就行</li></ul><hr><p><strong>MAplot</strong></p><ul><li>做横轴为A：average of log；纵轴为M：minus of log的点图，把p值低的点用蓝色标记出来</li><li>作图注意的参数：coe &#x3D; resultNames(dds)[index]，type &#x3D; “apeglm”</li><li>作图常需要用shrink处理log，shrink的目的：更准确估计LFC。具体来说，是把所有基因log fold change估计值的分布作为先验，用于，将信息很少或高度分散的基因的log fold change估计值缩小，缩小到更有可能的较低的lfc估计值。</li><li>也可以在MA图中圈出你想强调的基因</li><li>另外一个图是p值的直方图，也可以很清楚的看到p值的频率分布来更好的了解数据</li></ul><hr><p><strong>Gene clustering</strong></p><ul><li>同样本聚类一样，基因也可以聚类，我们通过计算基因表达量与其平均值的差值来观察基因是高表达还是低表达</li><li>通过热图中的颜色就可以进行识别不同formula condition的基因表达是不同的</li><li>dendrogram则展示了基因间的树状分层关系<br>![[Pasted image 20240102225700.png]]</li></ul><hr><p><strong>Independent filtering</strong></p><ul><li>我们知道count量低的基因会更多的存在小p值的情况，但是这部分数据的噪音很大</li><li>因此，我们可以通过FDR 程序的输入中剔除低计数基因，发现更多具有显著性的基因，这样的过程会由result自动进行，也被称为independent filtering</li><li><strong>Independent Hypothesis Weighting</strong>（IHW）则是一种可以代替上述方法的方法，在执行result的时候修改filterFun &#x3D; ihw即可</li></ul><hr><h2 id="结果注释与导出"><a href="#结果注释与导出" class="headerlink" title="结果注释与导出"></a>结果注释与导出</h2><ul><li>注释：我们可以根据Ensembl gene IDs来找到基因名，从而对基因用<code>mapIDs()</code>进行注释</li><li>导出：我们可以导出csv文件<code>write.csv</code>，动态html文件<code>HTMLReport()</code></li><li>在基因组空间展示fold changes：通过<code>format</code>来获取gene range的情况，通过<code>Gviz</code>作图。主要过程：<figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">window <span class="operator">&lt;-</span> resGR<span class="punctuation">[</span>topGene<span class="punctuation">]</span> <span class="operator">+</span> <span class="number">1e6</span></span><br><span class="line"><span class="comment"># 先创建一个Window of gene with the smallest p value, 包括它上下的1 million base pairs</span></span><br><span class="line">strand<span class="punctuation">(</span>window<span class="punctuation">)</span> <span class="operator">&lt;-</span> <span class="string">&quot;*&quot;</span></span><br><span class="line">resGRsub <span class="operator">&lt;-</span> resGR<span class="punctuation">[</span>resGR <span class="operator">%over%</span> window<span class="punctuation">]</span></span><br><span class="line">naOrDup <span class="operator">&lt;-</span> <span class="built_in">is.na</span><span class="punctuation">(</span>resGRsub<span class="operator">$</span>symbol<span class="punctuation">)</span> <span class="operator">|</span> duplicated<span class="punctuation">(</span>resGRsub<span class="operator">$</span>symbol<span class="punctuation">)</span></span><br><span class="line">resGRsub<span class="operator">$</span>group <span class="operator">&lt;-</span> ifelse<span class="punctuation">(</span>naOrDup<span class="punctuation">,</span> <span class="built_in">names</span><span class="punctuation">(</span>resGRsub<span class="punctuation">)</span><span class="punctuation">,</span> resGRsub<span class="operator">$</span>symbol<span class="punctuation">)</span></span><br><span class="line"><span class="comment"># 判断这个symbol在subset中存在，且不是duplicated我们就把这个gene symbol添加为resGRsub的name</span></span><br><span class="line">status <span class="operator">&lt;-</span> factor<span class="punctuation">(</span>ifelse<span class="punctuation">(</span>resGRsub<span class="operator">$</span>padj <span class="operator">&lt;</span> <span class="number">0.05</span> <span class="operator">&amp;</span> <span class="operator">!</span><span class="built_in">is.na</span><span class="punctuation">(</span>resGRsub<span class="operator">$</span>padj<span class="punctuation">)</span><span class="punctuation">,</span><span class="string">&quot;sig&quot;</span><span class="punctuation">,</span> <span class="string">&quot;notsig&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment"># 然后找出来这个subset里面padj小的，就说它的status factor = &quot;sig&quot;, else status factor = &quot;notsig&quot;</span></span><br><span class="line"><span class="comment"># 创建3个track，绘图即可</span></span><br><span class="line">options<span class="punctuation">(</span>ucscChromosomeNames <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">)</span></span><br><span class="line">g <span class="operator">&lt;-</span> GenomeAxisTrack<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line">a <span class="operator">&lt;-</span> AnnotationTrack<span class="punctuation">(</span>resGRsub<span class="punctuation">,</span> name <span class="operator">=</span> <span class="string">&quot;gene ranges&quot;</span><span class="punctuation">,</span> feature <span class="operator">=</span> status<span class="punctuation">)</span></span><br><span class="line">d <span class="operator">&lt;-</span> DataTrack<span class="punctuation">(</span>resGRsub<span class="punctuation">,</span> data <span class="operator">=</span> <span class="string">&quot;log2FoldChange&quot;</span><span class="punctuation">,</span> baseline <span class="operator">=</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">type <span class="operator">=</span> <span class="string">&quot;h&quot;</span><span class="punctuation">,</span> name <span class="operator">=</span> <span class="string">&quot;log2 fold change&quot;</span><span class="punctuation">,</span> strand <span class="operator">=</span> <span class="string">&quot;+&quot;</span><span class="punctuation">)</span></span><br><span class="line">plotTracks<span class="punctuation">(</span><span class="built_in">list</span><span class="punctuation">(</span>g<span class="punctuation">,</span> d<span class="punctuation">,</span> a<span class="punctuation">)</span><span class="punctuation">,</span> groupAnnotation <span class="operator">=</span> <span class="string">&quot;group&quot;</span><span class="punctuation">,</span></span><br><span class="line">notsig <span class="operator">=</span> <span class="string">&quot;grey&quot;</span><span class="punctuation">,</span> sig <span class="operator">=</span> <span class="string">&quot;hotpink&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure></li></ul><hr><p><strong>Removing hidden batch effects</strong></p><ul><li>不同cell lines可能会产生batch effects，我们可以用 SVA&#x2F;RUVSeq 的 statistical methods检测，然后把这个加到 DESeqDataSet 的design里面来解释他们</li><li>他们用的term：<ul><li>SVA: surrogate variables</li><li>RUV: unwanted variation</li></ul></li></ul><hr><p><strong>Time course experiments</strong></p>]]></content>
      
      
      <categories>
          
          <category> RNA-seq Report Draft </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Not Recommended Reading </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
